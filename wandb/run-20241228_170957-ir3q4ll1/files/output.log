Epoch 1/100:   0%|                                                                                                     | 0/100 [00:00<?, ?it/s]
Training Batch: 31it [00:09,  4.18it/s]
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([64, 3, 831, 523])
torch.Size([19, 3, 831, 523])
Traceback (most recent call last):
  File "/Users/akchunya/Projects/WSD-without-compromise/tests/cards_latent_dim_text.py", line 210, in <module>
    train()
  File "/Users/akchunya/Projects/WSD-without-compromise/tests/cards_latent_dim_text.py", line 115, in train
    loss = loss_fn(output, imgs, z_mean, z_logvar)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/akchunya/Projects/WSD-without-compromise/tests/cards_latent_dim_text.py", line 33, in ELBOLoss
    BCE = F.binary_cross_entropy(x_recons.reshape(BATCH_SIZE,-1),
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: shape '[64, -1]' is invalid for input of size 24772941
